const mongoose = require('mongoose');

const taskSchema = new mongoose.Schema({
  title: { type: String, required: true },
  description: String,
  type: {
    type: String,
    required: true,
    enum: [
      'watering', 'feeding', 'pruning', 'training', 'defoliation',
      'environmental-check', 'ph-check', 'ec-check', 'pest-inspection',
      'light-adjustment', 'harvest', 'flush', 'transplant', 'clone',
      'observation', 'maintenance', 'custom'
    ]
  },
  priority: {
    type: String,
    enum: ['low', 'medium', 'high', 'critical'],
    default: 'medium'
  },
  plantId: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'Plant',
    required: true 
  },
  dueDate: { type: Date, required: true },
  completed: { type: Boolean, default: false },
  completedAt: Date,
  estimatedDuration: Number, // in minutes
  actualDuration: Number,
  recurring: {
    enabled: { type: Boolean, default: false },
    frequency: {
      type: String,
      enum: ['daily', 'weekly', 'bi-weekly', 'monthly', 'custom']
    },
    interval: Number, // days for custom frequency
    endDate: Date
  },
  instructions: String,
  materials: [{
    name: String,
    quantity: String,
    unit: String
  }],
  results: {
    success: Boolean,
    notes: String,
    measurements: [{
      parameter: String, // 'ph', 'ec', 'temperature', etc.
      value: Number,
      unit: String,
      timestamp: { type: Date, default: Date.now }
    }],
    photos: [{
      url: String,
      description: String
    }]
  },
  autoGenerated: { type: Boolean, default: false },
  tags: [String]
}, {
  timestamps: true
});

// Index for efficient querying
taskSchema.index({ plantId: 1, dueDate: 1 });
taskSchema.index({ completed: 1, dueDate: 1 });
taskSchema.index({ type: 1, dueDate: 1 });

module.exports = mongoose.model('Task', taskSchema);
